---
- name: set some facts
  set_fact:
    _du_username: "{{ du_username }}"
    _du_password: "{{ du_password }}"
    _random_keyname: "{{ ansible_date_time.epoch | to_uuid }}"

# Create a keypair to be stored on express server
- name: create nova keypair
  os_keypair:
    state: present
    name: "{{ _random_keyname }}"
  register: keypair

- name: Show only private key to copy it in .pem
  vars:
    privatekey: "{{ keypair.key.private_key }}"
  debug: 
    msg: "{{ privatekey.split('\n') }}"

- name: Copy private key to local file
  copy:
    dest: "~/.ssh/{{ _random_keyname }}"
    content: "{{ keypair.key.private_key }}"
    mode: '0600'

# Create a security group in specified tenant
- name: Create a security group
  os_security_group:
    state: present
    name: DND_JENKINS_PIPELINE_SG

# Create a security group rule in specified tenant
- name: Create a security group rule to allow SSH
  os_security_group_rule:
    state: present
    security_group: DND_JENKINS_PIPELINE_SG
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0

- name: Launch instance(s) for Express target(s)
  os_server:
    name: "{{ du_name_vms }}-{{ item }}"
    state: present
    key_name: "{{ _random_keyname }}"
    availability_zone: "{{ default_availability_zone }}"
    security_groups: hackathon-secgroup
    nics: "{{ default_nics }}"
    image: "{{ default_image }}"
    flavor: "{{ default_flavor }}"
    meta:
      group: express_targets
  with_sequence: count={{ du_num_vms }} format=vm%02x
  register: "_os_servers"

- name: debug
  debug:
    msg: "{{ _os_servers }}"

- name: Add instances to inventory
  add_host:
    name: "{{ item.openstack.name }}"
    groups: express_targets
    ansible_host: "{{ item.openstack.accessIPv4 }}"
    ansible_ssh_private_key_file: "~/.ssh/{{ _random_keyname }}"
    ansible_ssh_user: ubuntu
  with_items: "{{ _os_servers.results }}"
