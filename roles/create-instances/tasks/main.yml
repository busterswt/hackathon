---
# Show all available Openstack images
##- name: Retrieve all available Openstack images
##  os_image_facts:
##  register: _os_images

##- debug:
##    msg: "{{ _os_images }}"

# Gather facts about all available flavors
##- name: Retrieve all OpenStack flavors
##  os_flavor_facts:
##  register: _os_flavors

##- debug:
##    msg: "{{ _os_flavors }}"

- name: set some facts
  set_fact:
    _du_username: "{{ du_username }}"
    _du_password: "{{ du_password }}"
    _random_keyname: "{{ ansible_date_time.epoch | to_uuid }}"

# Create a keypair to be stored on express server
- name: create nova keypair
  os_keypair:
    state: present
    name: "{{ _random_keyname }}"
  register: keypair

- name: Show only private key to copy it in .pem
  vars:
    privatekey: "{{ keypair.key.private_key }}"
  debug: 
    msg: "{{ privatekey.split('\n') }}"

- name: Copy private key to local file
  copy:
    dest: "~/.ssh/{{ _random_keyname }}"
    content: "{{ keypair.key.private_key }}"
    mode: '0600'

# Create a security group in specified tenant
- name: Create a security group
  os_security_group:
    state: present
    name: hackathon-secgroup

# Create a security group rule in specified tenant
- name: Create a security group rule to allow SSH
  os_security_group:
    state: present
    security_group: hackathon-secgroup
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0

# Create instance(s)
- name: Launch instances
  os_server:
    name: "{{ prefix }}-{{ item.name }}"
    state: present
    key_name: "{{ _random_keyname }}"
    availability_zone: "{{ item.availability_zone }}"
    security_groups: hackathon-secgroup
    nics: "{{ item.nics }}"
    image: "{{ item.image }}"
    flavor: "{{ item.flavor }}"
  with_items: "{{ servers }}"
  register: "_os_servers"

- name: Add instances to inventory
  add_host:
    name: "{{ item['openstack']['name'] }}"
    groups: "{{ item['item']['meta']['group'] }}"
    ansible_host: "{{ item.openstack.accessIPv4 }}"
    ansible_ssh_private_key_file: "~/.ssh/{{ _random_keyname }}"
    ansible_ssh_user: ubuntu
  with_items: "{{ _os_servers.results }}"

# Delete the keypair
#- name: delete nova keypair from the lab
#  os_keypair:
#    state: absent
#    name: "{{ _random_keyname }}"
